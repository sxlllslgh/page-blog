<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>OpenWRT使用mwan3实现单线多拨并整合WLAN转有线</title>
    <link href="/2022/10/02/openwrt-mwan3-sta/"/>
    <url>/2022/10/02/openwrt-mwan3-sta/</url>
    
    <content type="html"><![CDATA[<p>书接<a href="https://sxlllslgh.github.io/2022/09/26/openwrt-ipv6-nat">上文</a>，本文介绍一下新版OpenWRT上的单线多拨。其中，“单线（多个虚拟网卡）”用macvlan实现，“多拨”则用mwan3实现。此外因为我的网络的特殊情况（有线网稳定但很慢，无线网比较快但容易掉线），因此我还附加了将无线网转到有线网的操作，即WLAN的客户端模式。整个网络的拓扑图大致如下：</p><pre><code class=" mermaid">graph TD    A[Wire WAN] --&gt;|macvlan| B(Virtual WAN 1)    A --&gt; |macvlan| C(Virtual WAN 2)    B --&gt; E(Router)    C --&gt; E(Router)    D[Wireless WAN] --&gt; E    E --&gt;|NAT| F[LAN]</code></pre><h1 id="单线多拨"><a href="#单线多拨" class="headerlink" title="单线多拨"></a>单线多拨</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>包的安装没什么好说的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">opkg update<br>opkg install macvlan mwan3<br></code></pre></td></tr></table></figure><blockquote><p>截至我写这篇文章时，mwan3仍旧没有对新版防火墙做支持，因此他会默认安装旧版的iptables，因此<a href="https://sxlllslgh.github.io/2022/09/26/openwrt-ipv6-nat">上文</a>绕开旧版防火墙的折腾目前是没有意义的，但将来总会适配的。</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h1 id="虚拟网卡和网络接口"><a href="#虚拟网卡和网络接口" class="headerlink" title="虚拟网卡和网络接口"></a>虚拟网卡和网络接口</h1><p>这里先做个双拨，再网上叠加都照猫画虎就行。首先修改<code>/etc/config/network</code>，添加以下内容，用于添加虚拟网卡：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs conf">config device<br>option type &#x27;macvlan&#x27;<br>option ifname &#x27;eth1&#x27;<br>option mode &#x27;vepa&#x27;<br>option name &#x27;vth0&#x27;<br>option macaddr &#x27;自定义的MAC地址1&#x27;<br><br>config device<br>option type &#x27;macvlan&#x27;<br>option ifname &#x27;eth1&#x27;<br>option mode &#x27;vepa&#x27;<br>option name &#x27;vth1&#x27;<br>option macaddr &#x27;自定义的MAC地址2&#x27;<br></code></pre></td></tr></table></figure><p>注意自定义的MAC地址不能和物理网卡一样，否则会出问题。</p><p>然后再添加网络接口，每个接口和虚拟网卡一一对应，仍然是修改<code>/etc/config/network</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs conf">config interface &#x27;wan&#x27;<br>option device &#x27;vth0&#x27;<br>option proto &#x27;pppoe&#x27;<br>option username &#x27;拨号用户名&#x27;<br>option password &#x27;拨号密码&#x27;<br>option ipv6 &#x27;auto&#x27;<br>option metric &#x27;1&#x27;<br><br>config interface &#x27;wan6&#x27;<br>option device &#x27;vth0&#x27;<br>option proto &#x27;dhcpv6&#x27;<br>option metric &#x27;1&#x27;<br><br>config interface &#x27;wanb&#x27;<br>option device &#x27;vth1&#x27;<br>option proto &#x27;pppoe&#x27;<br>option username &#x27;拨号用户名&#x27;<br>option password &#x27;拨号密码&#x27;<br>option ipv6 &#x27;auto&#x27;<br>option metric &#x27;2&#x27;<br><br>config interface &#x27;wanb6&#x27;<br>option device &#x27;vth1&#x27;<br>option proto &#x27;dhcpv6&#x27;<br>option metric &#x27;2&#x27;<br></code></pre></td></tr></table></figure><p>几个注意事项：</p><ol><li>后面跟个6的表示是IPv6接口。</li><li>对于每组接口（IPv4一个和IPv6一个），都应该对应不同的虚拟网卡。</li><li>每个协议下的接口都应具有不同的距离度量（metric）。即比如这里的IPv4接口wan和wanb，两个metric就必须不一样。但组内不同协议的接口则没必要一样，比如wan和wan6，两个metric我图方便都写了1，其实可以不一样。</li><li>即便拨号后，每个wan接口会衍生出自己的IPv6虚拟接口，也不要删除这里定义的接口。</li></ol><h2 id="mwan3多拨"><a href="#mwan3多拨" class="headerlink" title="mwan3多拨"></a>mwan3多拨</h2><p>这里修改完后，再去修改mwan3的设置<code>/etc/config/mwan3</code>，这里只列出一组接口的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs conf"># 这里的IPv4接口名称对应之前/etc/config/network里的接口名称<br>config interface &#x27;wan&#x27;<br>option enabled &#x27;1&#x27;<br>option family &#x27;ipv4&#x27;<br>option initial_state &#x27;online&#x27;<br>list track_ip &#x27;www.baidu.com&#x27;<br>option track_method &#x27;ping&#x27;<br>option count &#x27;1&#x27;<br>option size &#x27;56&#x27;<br>option max_ttl &#x27;60&#x27;<br>option timeout &#x27;4&#x27;<br>option interval &#x27;10&#x27;<br>option failure_interval &#x27;5&#x27;<br>option recovery_interval &#x27;5&#x27;<br>option down &#x27;5&#x27;<br>option reliability &#x27;1&#x27;<br>option up &#x27;1&#x27;<br><br># 这里的IPv6接口对应拨号后DHCPv6获取的虚拟接口名称，一般就是IPv4接口名称后面加个底杠“_”再跟个“6”<br>config interface &#x27;wan_6&#x27;<br>option family &#x27;ipv6&#x27;<br>option enabled &#x27;1&#x27;<br>option initial_state &#x27;online&#x27;<br>option track_method &#x27;ping&#x27;<br>option count &#x27;1&#x27;<br>option size &#x27;56&#x27;<br>option max_ttl &#x27;60&#x27;<br>option timeout &#x27;4&#x27;<br>option interval &#x27;10&#x27;<br>option failure_interval &#x27;5&#x27;<br>option recovery_interval &#x27;5&#x27;<br>option down &#x27;5&#x27;<br>option reliability &#x27;1&#x27;<br>option up &#x27;1&#x27;<br>    # 这里的追踪地址建议写一个IPv6网站的IP地址，用域名的话有时候解析会有问题导致本来网通着但检测失败下线了<br>list track_ip &#x27;xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx&#x27;<br></code></pre></td></tr></table></figure><p>其他接口配置照着写就可以，这里仍然以两组接口为例（wan&#x2F;wan_6和wanb&#x2F;wanb_6），则需要依次配置每个接口的权重和距离、默认路由规则和负载均衡策略，修改<code>/etc/config/mwan3</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs conf"># 先配置每个接口的权重和距离<br>config member &#x27;wan_m1_w1&#x27;<br>option interface &#x27;wan&#x27;<br>    # 默认距离度量为1，如需修改可以在这里改，仍然是IPv4和IPv6各自考虑<br>option metric &#x27;2&#x27;<br>    # 默认权重为1，如需修改可以在这里改<br>    option weight &#x27;2&#x27;<br><br>config member &#x27;wan6_m1_w1&#x27;<br>option interface &#x27;wan_6&#x27;<br><br>config member &#x27;wanb_m1_w1&#x27;<br>option interface &#x27;wanb&#x27;<br><br>config member &#x27;wanb6_m1_w1&#x27;<br>option interface &#x27;wanb_6&#x27;<br><br># 默认路由规则<br>config rule &#x27;default_rule_v4&#x27;<br>option dest_ip &#x27;0.0.0.0/0&#x27;<br>option family &#x27;ipv4&#x27;<br>option use_policy &#x27;balanced&#x27;<br><br>config rule &#x27;default_rule_v6&#x27;<br>option dest_ip &#x27;::/0&#x27;<br>option family &#x27;ipv6&#x27;<br>option use_policy &#x27;balanced&#x27;<br><br># 负载均衡策略<br>config policy &#x27;balanced&#x27;<br>list use_member &#x27;wan_m1_w1&#x27;<br>list use_member &#x27;wanb_m1_w1&#x27;<br>list use_member &#x27;wan6_m1_w1&#x27;<br>list use_member &#x27;wanb6_m1_w1&#x27;<br>option last_resort &#x27;default&#x27;<br></code></pre></td></tr></table></figure><p>其余配置一般保持默认即可。</p><h2 id="mwan3特殊配置"><a href="#mwan3特殊配置" class="headerlink" title="mwan3特殊配置"></a>mwan3特殊配置</h2><p>mwan3有个常用的附加配置，就是固定流量的接口。比如HTTPS协议的流量，必须哪儿出哪儿进，因此固定HTTPS协议的443端口TCP流量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs conf">config rule &#x27;https&#x27;<br>option sticky &#x27;1&#x27;<br>option dest_port &#x27;443&#x27;<br>option proto &#x27;tcp&#x27;<br>option use_policy &#x27;balanced&#x27;<br></code></pre></td></tr></table></figure><h1 id="无线网转有线网"><a href="#无线网转有线网" class="headerlink" title="无线网转有线网"></a>无线网转有线网</h1><p>接下来就是将无线网转到有线网，即开启无线网的客户端模式，修改<code>/etc/config/wireless</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs conf">config wifi-iface &#x27;default_radio1&#x27;<br>option device &#x27;radio1&#x27;<br>option encryption &#x27;none&#x27;<br>option mode &#x27;sta&#x27;<br>option ssid &#x27;你要连接的WLAN名称&#x27;<br>option bssid &#x27;你要连接的WLAN热点MAC地址&#x27;<br>option ifname &#x27;wwan&#x27;<br>option network &#x27;wwan&#x27;<br>option macaddr &#x27;可以虚拟一个MAC地址用于某些需要绑定或认证的场景&#x27;<br></code></pre></td></tr></table></figure><p>上述配置新加了一个名为<code>wwan</code>的网络，需要修改<code>/etc/config/firewall</code>将其加入WAN防火墙组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs conf">config zone<br>option name &#x27;wan&#x27;<br>list network &#x27;wan&#x27;<br>list network &#x27;wan6&#x27;<br>list network &#x27;wan_6&#x27;<br>list network &#x27;wanb&#x27;<br>list network &#x27;wanb6&#x27;<br>list network &#x27;wanb_6&#x27;<br>list network &#x27;wwan&#x27;<br>option input &#x27;REJECT&#x27;<br>option output &#x27;ACCEPT&#x27;<br>option forward &#x27;REJECT&#x27;<br>option masq &#x27;1&#x27;<br>option mtu_fix &#x27;1&#x27;<br></code></pre></td></tr></table></figure><p>如此一来，就可以连接上WLAN了。接下来修改<code>/etc/config/mwan3</code>将其加入多拨：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs conf">config interface &#x27;wwan&#x27;<br>option enabled &#x27;1&#x27;<br>option family &#x27;ipv4&#x27;<br>    # 照抄有线网的IPv4配置即可<br><br>config member &#x27;wwan_m1_w1&#x27;<br>option interface &#x27;wwan&#x27;<br><br># 在负载均衡策略里添加wwan网络<br>config policy &#x27;balanced&#x27;<br>list use_member &#x27;wwan_m1_w1&#x27;<br>list use_member &#x27;wan_m1_w1&#x27;<br>list use_member &#x27;wanb_m1_w1&#x27;<br>list use_member &#x27;wan6_m1_w1&#x27;<br>list use_member &#x27;wanb6_m1_w1&#x27;<br>option last_resort &#x27;default&#x27;<br></code></pre></td></tr></table></figure><h2 id="固定流量网络接口"><a href="#固定流量网络接口" class="headerlink" title="固定流量网络接口"></a>固定流量网络接口</h2><p>开头说过，我的网络下，有线网稳定但慢，无线网快但不稳，因此，对于需要稳定连接但速度要求不高的流量，比如SSH，我想把他固定在有线网上，于是继续修改<code>/etc/config/mwan3</code>，添加一组仅走有线网的策略，并将SSH流量绑定到这个策略上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs conf">config policy &#x27;wire_only&#x27;<br>list use_member &#x27;wan_m1_w1&#x27;<br>list use_member &#x27;wan6_m1_w1&#x27;<br>list use_member &#x27;wanb_m1_w1&#x27;<br>list use_member &#x27;wanb6_m1_w1&#x27;<br>option last_resort &#x27;unreachable&#x27;<br><br>config rule &#x27;SSH&#x27;<br>option proto &#x27;tcp&#x27;<br>option dest_port &#x27;22&#x27;<br>option sticky &#x27;1&#x27;<br>option use_policy &#x27;wire_only&#x27;<br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>至此，一个实现了单线多拨+整合无线网的负载均衡就实现了。我这里测速没有提升（即便是开多线程，不确定是不是HTTPS固定的问题），但迅雷是实打实所有接口都跑满了，肥肠奈斯。</p>]]></content>
    
    
    <categories>
      
      <category>Blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络</tag>
      
      <tag>OpenWRT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenWRT使用nftables实现IPv6 NAT</title>
    <link href="/2022/09/26/openwrt-ipv6-nat/"/>
    <url>/2022/09/26/openwrt-ipv6-nat/</url>
    
    <content type="html"><![CDATA[<p>手贱给路由器升级到了OpenWRT 22.03，结果防火墙规则文件<code>/etc/firewall.user</code>直接没了，好家伙。一查才发现新版OpenWRT用上了Firewall 4，规则管理工具从iptables升级到了nftables，貌似天然对IPv6支持，不再需要手动安装ip6tables，嗯是个好东西，用起来。</p><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>校园网总是能给你整点儿意想不到的烂活出来，比如给你分配一个&#x2F;128的IPv6地址，又或者在DHCPv6协商阶段给你返一个错误报文。前者直接违背了IPv6的初衷，导致大多数低端路由器下的设备直接拿不到IPv6地址；后者不确定是配置问题还是华为那个核心路由器（型号好像是NE80）的bug，在客户端向服务器发送Advertise报文后直接返回一个错误报文，然后又成功返回一个地址，中间这个错误报文直接导致了MikroTik的RouterOS系统判断获取失败重启协商过程从而一直拿不到地址。</p><h1 id="旧版OpenWRT的解决办法"><a href="#旧版OpenWRT的解决办法" class="headerlink" title="旧版OpenWRT的解决办法"></a>旧版OpenWRT的解决办法</h1><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p>在之前的OpenWRT中，我用了一个清华大佬的贴子中的NAT办法，首先安装一堆IPv6相关的包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">opkg update<br>opkg install ip6tables kmod-ipt-nat6 kmod-ip6tables kmod-ip6tables-extra<br></code></pre></td></tr></table></figure><p>然后在自定义防火墙文件<code>/etc/firewall.user</code>中添加自定义规则：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ip6tables -t nat -A POSTROUTING -o pppoe-wan -j MASQUERADE<br>ip6tables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT<br>ip6tables -A FORWARD -i br-lan -j ACCEPT<br></code></pre></td></tr></table></figure><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>此外，OpenWRT从DHCP服务器拿到地址后，会自动添加一条路由：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">default from 2001:xxxx:xxxx:xxxx::/64 via fe80::xxxx dev pppoe-wan metric 512<br></code></pre></td></tr></table></figure><p>这条路由对路由器下的设备没有用，因此，需要在<code>/etc/hotplug.d/iface</code>文件夹下新加一条接口热插拔规则，姑且起名为<code>99-ipv6</code>（前面的数字表示执行顺序，后面的名字随便起）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/sh</span><br>[ &quot;$ACTION&quot; = ifup ] || exit 0<br>iface=wan6 # 这个接口名称对应/etc/config/network中定义的IPv6接口<br>[ -z &quot;$iface&quot; -o &quot;$INTERFACE&quot; = &quot;$iface&quot; ] || exit 0<br>ip -6 route add default via fe80::xxxx dev pppoe-wan metric 1<br></code></pre></td></tr></table></figure><p>比较稳妥的办法就像上面这样，记住默认路由中的DHCP服务器地址，然后添加一条metric比较小的默认路由。</p><blockquote><p>清华大佬用了sed替换上面那条默认路由，但我的网络中获取IPv6地址有延迟，导致一开始没有默认路由，于是就失败了。此外，第二条删除默认路的代码也有问题，语法有错。附上清华大佬的默认路由替换脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/sh</span><br>[ &quot;$ACTION&quot; = ifup ] || exit 0<br>iface=wan6<br>[ -z &quot;$iface&quot; -o &quot;$INTERFACE&quot; = &quot;$iface&quot; ] || exit 0<br>ip -6 route add `ip -6 route show default | sed -e &#x27;s/from [^ ]* //&#x27;| sed -e &#x27;s/metric [0-9]*/metric 1/&#x27;`<br>ip -6 route del `ip -6 route show default | grep from`<br></code></pre></td></tr></table></figure></blockquote><p>到这里应该内网就能上IPv6了。</p><h1 id="新版OpenWRT的解决办法"><a href="#新版OpenWRT的解决办法" class="headerlink" title="新版OpenWRT的解决办法"></a>新版OpenWRT的解决办法</h1><h2 id="新防火墙"><a href="#新防火墙" class="headerlink" title="新防火墙"></a>新防火墙</h2><p>新版的防火墙规则大改，研究了半天后终于搞好了。路由的热插拔脚本仍然有，但不需要装一堆IPv6的包了，只需要在<code>/etc/config/firewall</code>中添加一条NAT规则：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs conf">config nat<br>option name &#x27;IPv6 Masquerade&#x27;<br>option family &#x27;ipv6&#x27;<br>option src &#x27;wan&#x27;<br>option target &#x27;MASQUERADE&#x27;<br>list proto &#x27;all&#x27;<br></code></pre></td></tr></table></figure><p>这条规则对应之前自定义防火墙规则的第一条，用于开启伪装。</p><p>另外两条我没有找到OpenWRT的uci实现的办法，只能修改<code>/etc/nftables.d/10-custom-filter-chains.nft</code>文件。这个本质上就是nftables版的<code>/etc/firewall.user</code>，只是语法有了很大变化。只需要修改一个post_forward链即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs conf">chain user_post_forward &#123;<br>    ct state established,related accept # 对应上面第二条conntrack规则<br>    iifname br-lan accept # 对应上面第三条规则<br>&#125;<br></code></pre></td></tr></table></figure><p>至此三条自定义防火墙规则升级完成，不再需要ip6tables了。</p><h1 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h1><p>有些网络，可能需要单独设置DHCPv6相关的设置，比如路由通告（RA）等，以我的网络为例，需要修改<code>/etc/config/dhcp</code>里面lan相关的设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs conf">config dhcp &#x27;lan&#x27;<br>option interface &#x27;lan&#x27;<br>option start &#x27;100&#x27;<br>option limit &#x27;150&#x27;<br>option leasetime &#x27;12h&#x27;<br>option dhcpv4 &#x27;server&#x27;<br>option dhcpv6 &#x27;server&#x27;<br># 主要就是下面这三条<br>option ra &#x27;server&#x27;<br>option ra_default &#x27;1&#x27;<br>option ra_management &#x27;2&#x27;<br></code></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>其实新版OpenWRT中仍然保留了对Firewall 3的兼容性，<code>firewall.user</code>规则仍然可以用，但多拨的mwan3貌似和此有冲突（只是貌似，也不确定是不是mwan3自己对Firewall 4兼容有问题），因此我先把防火墙改上来，有空再解决多拨的问题。</p>]]></content>
    
    
    <categories>
      
      <category>Blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络</tag>
      
      <tag>OpenWRT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>拥抱Hexo</title>
    <link href="/2022/09/25/hello-hexo/"/>
    <url>/2022/09/25/hello-hexo/</url>
    
    <content type="html"><![CDATA[<p>我总是说话的巨人，行动的矮子。从八年前大二第一次接触前端开始，就一直想做一个自己的博客网站，幻想着做成拥有注册、登录、评论……等等诸多功能齐全的一个大项目，方案也从一开始的裸PHP，一直追新到Laravel、Ruby on Rails、Spring、Springboot + Angular……结果我拿这些工具接了不少活，自己的站却一直处于新建文件夹状态，属实讽刺。</p><p>之前想着要不就CSDN算了，反正写博客也是给人看的嘛。但最近CSDN的表现过于令人失望，无休止的广告、会员和禁止复制——天下代码一大抄，你不让我复制我看的个🔨。我的技术分享自然是希望复制的人越多越好，所以最终还是下定决心转移到Hexo上，静态就静态吧，反正也没什么人气，没有评论的必要。之前的博客我会逐步转移到这边来，这样也才有一种自己的东西自己掌控的感觉，而不是泡在一个充斥着利益恶臭的泥潭里。</p><p>不过我也低估了Hexo的配置难度，有手生的原因（最后一次碰npm还是六年前写的那个Laravel插件），主要精力也花费在了GitHub的Action的配置上，花了大半天才搞好。CI&#x2F;CD是个好东西，可惜门槛也确实有一点，以后还是要多熟悉，毕竟长期搞一个项目，自动部署不要太舒服。</p><p>写论文去了，再写不出来要被老板锤死了。</p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
